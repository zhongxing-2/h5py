parameters:
  platform: none
  installer: none

steps:
- task: CacheBeta@0
  displayName: HDF5 cache
  inputs:
    # The key should specify enough to avoid restoring an incompatible build.
    # HDF5_VSVERSION is only for Windows - it's just a fixed string elsewhere.
    key: HDF5 | "$(Agent.OS)" | "${{ parameters.vmImage }}" | "$(HDF5_VERSION)" | "$(HDF5_VSVERSION)"
    path: $(HDF5_CACHE_DIR)
  condition: and(succeeded(), ne(variables['HDF5_VERSION'], ''))

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    architecture: 'x64'
  displayName: 'Use Python $(python.version)'
  condition: and(succeeded(), ne(variables['python.version'], 'Pre'))

  #- task: stevedower.python.InstallPython.InstallPython@1
  #  displayName: 'Use prerelease Python'
  #  inputs:
  #    prerelease: true
  #  condition: and(succeeded(), eq(variables['python.version'], 'Pre'))

- ${{ if eq(parameters.installer, 'nuget') }}:
  - task: NuGetToolInstaller@0
    displayName: 'Use latest available Nuget'

  - script: |
      nuget install libpng-msvc14-x64 -ExcludeVersion -OutputDirectory "$(build.BinariesDirectory)"
      nuget install zlib-msvc14-x64 -ExcludeVersion -OutputDirectory "$(build.BinariesDirectory)"
      echo ##vso[task.prependpath]$(build.BinariesDirectory)\libpng-msvc14-x64\build\native\bin_release
      echo ##vso[task.prependpath]$(build.BinariesDirectory)\zlib-msvc14-x64\build\native\bin_release
      echo ##vso[task.setvariable variable=CL]/I$(build.BinariesDirectory)\libpng-msvc14-x64\build\native\include /I$(build.BinariesDirectory)\zlib-msvc14-x64\build\native\include
      echo ##vso[task.setvariable variable=LINK]/LIBPATH:$(build.BinariesDirectory)\libpng-msvc14-x64\build\native\lib_release /LIBPATH:$(build.BinariesDirectory)\zlib-msvc14-x64\build\native\lib_release
    displayName: 'Install dependencies with nuget'
- ${{ if eq(parameters.installer, 'brew') }}:
  - script: |
      brew install pkg-config hdf5@1.10 ccache open-mpi
    displayName: 'Install dependencies with brew'
- ${{ if eq(parameters.installer, 'apt') }}:
  - script: |
      sudo apt-get update
      sudo apt-get install libhdf5-serial-dev ccache openmpi-bin libopenmpi-dev
    displayName: 'Install dependencies with apt'

- script: |
    python -m pip install --upgrade pip
    pip install tox codecov
  displayName: 'Install dependencies with pip'

- script: env
  displayName: 'print env'

- ${{ if eq(parameters.shell, 'unix') }}:
    - script: |
        ./ci/travis/get_hdf5_if_needed.sh
      displayName: 'ensure HDF5'
- ${{ if eq(parameters.shell, 'cmd') }}:
    - script: |
        py -3.7 -m pip install requests
        py -3.7 ci\\appveyor\\get_hdf5.py
      displayName: 'ensure HDF5'

- script: env
  displayName: 'print env'

- script: |
    tox
  displayName: 'tox'

- task: PythonScript@0
  inputs:
    scriptSource: 'filePath'
    scriptPath: 'ci/upload_coverage.py'
    arguments: --codecov-token 813fb6da-087d-4b36-a185-5a530cab3455
  displayName: 'codecov'
