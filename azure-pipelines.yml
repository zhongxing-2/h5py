# from matplotlib's azure setup

variables:
  HDF5_CACHE_DIR: $(Pipeline.Workspace)/cache/hdf5
  PIP_CACHE_DIR: $(Pipeline.Workspace)/cache/pip
  CCACHE_DIR: $(Pipeline.Workspace)/cache/ccache

jobs:

- job: 'ubuntu1604'
  pool:
    vmImage: ubuntu-16.04
  strategy:
    matrix:
    # system independent tests
      static-checks:
        TOXENV: docs,checkreadme,pre-commit,rever
        python.version: '3.6'
      # -deps : test with default (latest) versions of dependencies
      # -mindeps : test with oldest supported version of (python) dependencies
      # -deps-pre : test pre-release versions of (python) dependencies)
      # -tables : also check compatibility with pytables
      py36:
        python.version: '3.6'
        TOXENV: py36-test-deps,py36-test-mindeps,py36-test-deps-pre,py36-test-mindeps-tables
        H5PY_ENFORCE_COVERAGE: yes
      py37:
        python.version: '3.7'
        TOXENV: py37-test-deps,py37-test-mindeps,py37-test-deps-pre,py37-test-deps-tables
    # test when we're not in a unicode locale
      py36-Clocale:
        python.version: '3.6'
        TOXENV: py36-test-deps
        TOX_TESTENV_PASSENV: LANG LC_ALL
        LANG: C
        LC_ALL: C
        H5PY_ENFORCE_COVERAGE: yes
    # test against newer HDF5
      py36-deps-hdf51103:
        python.version: '3.6'
        TOXENV: py36-test-deps
        HDF5_VERSION: 1.10.3
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py37-deps-hdf51104:
        python.version: '3.7'
        TOXENV: py37-test-deps
        HDF5_VERSION: 1.10.4
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py37-deps-hdf51105:
        python.version: '3.7'
        TOXENV: py37-test-deps
        HDF5_VERSION: 1.10.5
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py38-deps-hdf51105:
        python.version: '3.8'
        TOXENV: py38-test-deps
        HDF5_VERSION: 1.10.5
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
      py38-deps-hdf51120:
        python.version: '3.8'
        TOXENV: py38-test-deps
        HDF5_VERSION: 1.12.0
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        H5PY_ENFORCE_COVERAGE: yes
    # do mpi tests
#      py36-deps-hdf51105-mpi:
#        python.version: '3.6'
#        TOXENV: py36-test-mindeps-mpi4py
#        HDF5_VERSION: 1.10.5
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#        HDF5_MPI: ON
#        CC: mpicc
#      py37-deps-hdf51105-mpi:
#        python.version: '3.7'
#        TOXENV: py37-test-mindeps-mpi4py
#        HDF5_VERSION: 1.10.5
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#        HDF5_MPI: ON
#        CC: mpicc
    maxParallel: 4

  steps:
    - template: ci/azure-pipelines-steps.yml
      parameters:
        vmImage: 'ubuntu-16.04'
        installer: apt
        shell: unix

- job: 'linux_wheels'
  pool:
    vmImage: ubuntu-16.04

  variables:
    CIBW_BUILD: cp3[678]-manylinux_x86_64
    CIBW_MANYLINUX_X86_64_IMAGE: docker.io/h5py/manylinux2010_x86_64-hdf5

  steps:
    - template: ci/azure-pipelines-wheels.yml

- job: 'test_linux_wheels'
  pool:
    vmImage: ubuntu-16.04
  dependsOn: linux_wheels

  steps:
    - checkout: none
    - task: DownloadBuildArtifacts@0
      inputs:
        artifactName: manylinux_wheels
        downloadPath: $(System.DefaultWorkingDirectory)
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.8'
        architecture: 'x64'
    - script: |
        python -m pip install --upgrade pip
        pip install tox codecov
      displayName: Install tox
    - script: |
        ls manylinux_wheels/
        tox -e py38-test-deps --installpackage manylinux_wheels/h5py-2.10.0-cp38-cp38-manylinux1_x86_64.whl


- job: 'Windows'
  pool:
    vmImage: vs2017-win2016
  strategy:
    matrix:
    # -deps : test with default (latest) versions of dependencies
    # -mindeps : test with oldest supported version of (python) dependencies
    # -deps-pre : test pre-release versions of (python) dependencies)
    #
    # 64 bit - HDF5 1.8
      py36-hdf518:
        python.version: '3.6'
        TOXENV: py36-test-deps,py36-test-mindeps,py36-test-deps-pre
        HDF5_VERSION: 1.8.17
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
      py37-hdf518:
        python.version: '3.7'
        TOXENV: py37-test-deps,py37-test-mindeps,py37-test-deps-pre
        HDF5_VERSION: 1.8.17
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
    # 64 bit - HDF5 1.10
      py36-hdf5110:
        python.version: '3.6'
        TOXENV: py36-test-deps,py36-test-mindeps,py36-test-deps-pre
        HDF5_VERSION: 1.10.6
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
      py37-hdf5110:
        python.version: '3.7'
        TOXENV: py37-test-deps,py37-test-mindeps,py37-test-deps-pre
        HDF5_VERSION: 1.10.6
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
      py38-hdf5110:
        python.version: '3.8'
        TOXENV: py38-test-deps,py38-test-mindeps,py38-test-deps-pre
        HDF5_VERSION: 1.10.6
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
    # 64 bit - HDF5 1.10
      py36-hdf5112:
        python.version: '3.6'
        TOXENV: py36-test-deps,py36-test-mindeps,py36-test-deps-pre
        HDF5_VERSION: 1.12.0
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
      py37-hdf5112:
        python.version: '3.7'
        TOXENV: py37-test-deps,py37-test-mindeps,py37-test-deps-pre
        HDF5_VERSION: 1.12.0
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
      py38-hdf5112:
        python.version: '3.8'
        TOXENV: py38-test-deps,py38-test-mindeps,py38-test-deps-pre
        HDF5_VERSION: 1.12.0
        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
        HDF5_VSVERSION: "15-64"
        H5PY_ENFORCE_COVERAGE: yes
        CIBW_BUILD: cp38-win_amd64
    maxParallel: 4

  steps:
    - template: ci/azure-pipelines-steps.yml
      parameters:
        vmImage: 'vs2017-win2016'
        installer: nuget
        shell: cmd

- job: 'macOS1015'
  pool:
    vmImage: macOS-10.15
  strategy:
    matrix:
      # -deps : test with default (latest) versions of dependencies
      # -mindeps : test with oldest supported version of (python) dependencies
      # -deps-pre : test pre-release versions of (python) dependencies)
      py36:
        python.version: '3.6'
        TOXENV: py36-test-deps,py36-test-mindeps,py36-test-deps-pre
        H5PY_ENFORCE_COVERAGE: yes
      py37:
        python.version: '3.7'
        TOXENV: py37-test-deps,py37-test-mindeps,py37-test-deps-pre
        H5PY_ENFORCE_COVERAGE: yes
      py38:
        python.version: '3.8'
        TOXENV: py38-test-deps,py38-test-mindeps,py38-test-deps-pre
        H5PY_ENFORCE_COVERAGE: yes
        CIBW_BUILD: cp38-macosx_x86_64
    # test against newer HDF5
#      py36-deps-hdf51103:
#        python.version: '3.6'
#        TOXENV: py36-test-deps
#        HDF5_VERSION: 1.10.3
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#      py37-deps-hdf51103:
#        python.version: '3.7'
#        TOXENV: py37-test-deps
#        HDF5_VERSION: 1.10.3
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#      py36-deps-hdf51104:
#        python.version: '3.6'
#        TOXENV: py36-test-deps
#        HDF5_VERSION: 1.10.4
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#      py37-deps-hdf51104:
#        python.version: '3.7'
#        TOXENV: py37-test-deps
#        HDF5_VERSION: 1.10.4
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#      py36-deps-hdf51105:
#        python.version: '3.6'
#        TOXENV: py36-test-deps
#        HDF5_VERSION: 1.10.5
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
#      py37-deps-hdf51105:
#        python.version: '3.7'
#        TOXENV: py37-test-deps
#        HDF5_VERSION: 1.10.5
#        HDF5_DIR: $(HDF5_CACHE_DIR)/$(HDF5_VERSION)
    maxParallel: 4

  steps:
    - template: ci/azure-pipelines-steps.yml
      parameters:
        vmImage: 'xcode9-macos10.13'
        installer: brew
        shell: unix
